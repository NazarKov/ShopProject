// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopProjectDataBase.Context;

#nullable disable

namespace ShopProjectDataBase.Migrations
{
    [DbContext(typeof(ContextDataBase))]
    partial class ContextDataBaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopProjectDataBase.Entities.DiscountEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameDiscount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PercentageDiscount")
                        .HasColumnType("int");

                    b.Property<int>("TypeDiscount")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.ElectronicSignatureKey", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("EndAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<byte[]>("Signature")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SignaturePassword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserSignatureKey");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.GiftCertificatesEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("GiftCertificates");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.MediaAccessControlEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OperationsRecorderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("int");

                    b.Property<int?>("WorkingShiftsID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OperationsRecorderID");

                    b.HasIndex("WorkingShiftsID");

                    b.ToTable("MediaAccessControls");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.ObjectOwnerEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_DISTR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_TERRIT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeObject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("D_ACC_END")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("D_ACC_START")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("D_LAST_CH")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("KATOTTG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameObject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("REG_NUM_OBJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeObjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfRights")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeStatus")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ObjectOwner");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.OperationEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("AmountOfFundsReceived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountOfIssuedFunds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BuyersAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GoodsTax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MACId")
                        .HasColumnType("int");

                    b.Property<string>("NumberPayment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RestPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ShiftID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TypeOperation")
                        .HasColumnType("int");

                    b.Property<int>("TypePayment")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MACId")
                        .IsUnique()
                        .HasFilter("[MACId] IS NOT NULL");

                    b.HasIndex("ShiftID");

                    b.ToTable("Operation");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.OperationsRecorderEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("D_REG")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FiscalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ObjectOwnerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeStatus")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ObjectOwnerID");

                    b.ToTable("OperationsRecorder");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.OperationsRecorderUserEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OpertionsRecordersID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsersID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("OpertionsRecordersID");

                    b.HasIndex("UsersID");

                    b.ToTable("OperationsRecorderAndUser");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.OrderEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int?>("OperationID")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("OperationID");

                    b.HasIndex("ProductID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.ProductCodeUKTZEDEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("CodeUKTZED");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ArhivedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Articule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CodeUKTZEDID")
                        .HasColumnType("int");

                    b.Property<decimal>("Count")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("DiscountID")
                        .HasColumnType("int");

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("OutStockAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UnitID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CodeUKTZEDID");

                    b.HasIndex("DiscountID");

                    b.HasIndex("UnitID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.ProductUnitEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NameUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("ShortNameUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.TokenEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Device")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("UserToken");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AutomaticLogin")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SignatureKeyID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserRoleID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SignatureKeyID");

                    b.HasIndex("UserRoleID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.UserRoleEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NameRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeAccess")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.WorkingShiftEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("AmountOfFundsIssued")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountOfFundsReceived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountOfOfficialFundsIssuedCard")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountOfOfficialFundsIssuedCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountOfOfficialFundsReceivedCard")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountOfOfficialFundsReceivedCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("CreateAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("DataPacketIdentifier")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("EndAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FactoryNumberRRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FiscalNumberRRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MACIdCreateAt")
                        .HasColumnType("int");

                    b.Property<int?>("MACIdEndAt")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCheckForShift")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalReturnCheckForShift")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TypeRRO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TypeShiftCrateAt")
                        .HasColumnType("int");

                    b.Property<int>("TypeShiftEndAt")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserCloseShiftID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserOpenShiftID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("MACIdCreateAt");

                    b.HasIndex("MACIdEndAt");

                    b.HasIndex("UserCloseShiftID");

                    b.HasIndex("UserOpenShiftID");

                    b.ToTable("WorkingShift");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.MediaAccessControlEntity", b =>
                {
                    b.HasOne("ShopProjectDataBase.Entities.OperationsRecorderEntity", "OperationsRecorder")
                        .WithMany("MediaAccessControls")
                        .HasForeignKey("OperationsRecorderID");

                    b.HasOne("ShopProjectDataBase.Entities.WorkingShiftEntity", "WorkingShifts")
                        .WithMany()
                        .HasForeignKey("WorkingShiftsID");

                    b.Navigation("OperationsRecorder");

                    b.Navigation("WorkingShifts");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.OperationEntity", b =>
                {
                    b.HasOne("ShopProjectDataBase.Entities.MediaAccessControlEntity", "MAC")
                        .WithOne("Operation")
                        .HasForeignKey("ShopProjectDataBase.Entities.OperationEntity", "MACId");

                    b.HasOne("ShopProjectDataBase.Entities.WorkingShiftEntity", "Shift")
                        .WithMany("Operations")
                        .HasForeignKey("ShiftID");

                    b.Navigation("MAC");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.OperationsRecorderEntity", b =>
                {
                    b.HasOne("ShopProjectDataBase.Entities.ObjectOwnerEntity", "ObjectOwner")
                        .WithMany("OperationsRecorderEntitis")
                        .HasForeignKey("ObjectOwnerID");

                    b.Navigation("ObjectOwner");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.OperationsRecorderUserEntity", b =>
                {
                    b.HasOne("ShopProjectDataBase.Entities.OperationsRecorderEntity", "OpertionsRecorders")
                        .WithMany()
                        .HasForeignKey("OpertionsRecordersID");

                    b.HasOne("ShopProjectDataBase.Entities.UserEntity", "Users")
                        .WithMany()
                        .HasForeignKey("UsersID");

                    b.Navigation("OpertionsRecorders");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.OrderEntity", b =>
                {
                    b.HasOne("ShopProjectDataBase.Entities.OperationEntity", "Operation")
                        .WithMany("Order")
                        .HasForeignKey("OperationID");

                    b.HasOne("ShopProjectDataBase.Entities.ProductEntity", "Product")
                        .WithMany("Order")
                        .HasForeignKey("ProductID");

                    b.Navigation("Operation");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.ProductEntity", b =>
                {
                    b.HasOne("ShopProjectDataBase.Entities.ProductCodeUKTZEDEntity", "CodeUKTZED")
                        .WithMany()
                        .HasForeignKey("CodeUKTZEDID");

                    b.HasOne("ShopProjectDataBase.Entities.DiscountEntity", "Discount")
                        .WithMany()
                        .HasForeignKey("DiscountID");

                    b.HasOne("ShopProjectDataBase.Entities.ProductUnitEntity", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID");

                    b.Navigation("CodeUKTZED");

                    b.Navigation("Discount");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.TokenEntity", b =>
                {
                    b.HasOne("ShopProjectDataBase.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.UserEntity", b =>
                {
                    b.HasOne("ShopProjectDataBase.Entities.ElectronicSignatureKey", "SignatureKey")
                        .WithMany("User")
                        .HasForeignKey("SignatureKeyID");

                    b.HasOne("ShopProjectDataBase.Entities.UserRoleEntity", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleID");

                    b.Navigation("SignatureKey");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.WorkingShiftEntity", b =>
                {
                    b.HasOne("ShopProjectDataBase.Entities.MediaAccessControlEntity", "MACCreateAt")
                        .WithMany()
                        .HasForeignKey("MACIdCreateAt")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ShopProjectDataBase.Entities.MediaAccessControlEntity", "MACEndAt")
                        .WithMany()
                        .HasForeignKey("MACIdEndAt")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ShopProjectDataBase.Entities.UserEntity", "UserCloseShift")
                        .WithMany()
                        .HasForeignKey("UserCloseShiftID");

                    b.HasOne("ShopProjectDataBase.Entities.UserEntity", "UserOpenShift")
                        .WithMany()
                        .HasForeignKey("UserOpenShiftID");

                    b.Navigation("MACCreateAt");

                    b.Navigation("MACEndAt");

                    b.Navigation("UserCloseShift");

                    b.Navigation("UserOpenShift");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.ElectronicSignatureKey", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.MediaAccessControlEntity", b =>
                {
                    b.Navigation("Operation");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.ObjectOwnerEntity", b =>
                {
                    b.Navigation("OperationsRecorderEntitis");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.OperationEntity", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.OperationsRecorderEntity", b =>
                {
                    b.Navigation("MediaAccessControls");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.ProductEntity", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("ShopProjectDataBase.Entities.WorkingShiftEntity", b =>
                {
                    b.Navigation("Operations");
                });
#pragma warning restore 612, 618
        }
    }
}
